@use "sass:string";
@use "sass:meta";
@use "sass:list";
@use "sass:math";
@use "sass:map";

/*
 * Coerces a SCSS variable to a number so we can use it in math operations.
 * The unit of the SCSS variable will be lost.
 *
 * https://stackoverflow.com/questions/47630616/scss-arithmetic-operation-with-string
 */
@function to-number($value) {
  @if (meta.type-of($value) == 'number') {
    @return $value;
  } @else if (meta.type-of($value) != 'string') {
    @error 'Value for `to-number` should be a number or a string.';
  }

  $result: 0;
  $digits: 0;
  $minus: string.slice($value, 1, 1) == '-';
  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);

  @for $i from if($minus, 2, 1) through string.length($value) {
    $character: string.slice($value, $i, $i);

    @if (list.index(map.keys($numbers), $character) or $character == '.') {
      @if ($character == '.') {
        $digits: 1;
      } @else if ($digits == 0) {
        $result: $result * 10 + map.get($numbers, $character);
      } @else {
        $digits: $digits * 10;
        $result: $result + math.div(map.get($numbers, $character), $digits);
      }
    }
  }

  @return if($minus, -$result, $result);
}

/*
 * Remove the unit of a length
 *
 * https://css-tricks.com/snippets/sass/strip-unit-function/
 */
@function strip-unit($number) {
  @if (meta.type-of($number) == 'number' and not math.is-unitless($number)) {
    @return math.div($number, ($number * 0 + 1));
  }

  @return $number;
}

/**
 * Splits a string based on the specified separator
 */
@function str-split($string, $separator) {
  // empty array/list
  $split-arr: ();

  // first index of separator in string
  $index : string.index($string, $separator);

  // loop through string
  @while ($index != null) {
    // get the substring from the first character to the separator
    $item: string.slice($string, 1, $index - 1);

    // push item to array
    $split-arr: list.append($split-arr, $item);

    // remove item and separator from string
    $string: string.slice($string, $index + 1);

    // find new index of separator
    $index : string.index($string, $separator);
  }

  // add the remaining string to list (the last item)
  $split-arr: list.append($split-arr, $string);

  @return $split-arr;
}
